话题引出：
	计算器，将运算类与类工厂分开，运算类用来运算，相应的工厂类来生产运算类

简单工厂的最大优点在于工厂类中包含了必要的逻辑判断，根据客户端的选择条件动态实例化相关的类，对于客户端来说，除去了与具体产品的依赖

工厂模式：
	定义一个用于创建对象的接口，让子类决定实例化哪个类。工厂方法使一个类的实例化延迟到其子类。这个接口只有一个方法，就是创建抽象产品的工厂方法


	工厂方法模式实现时，客户端需要决定实例化哪一个工厂来实现运算类，选择判断的问题还是存在的。也就是说，工厂方法把简单工厂的内部逻辑判断移到了客户端代码来进行。你需要加功能，本来是该工厂类，现在改的是客户端。


	工厂模式克服了简单工厂违背开闭原则的缺点，又保持了封装对象创建过程的有点
	工厂模式和简单工厂都集中封装了对象的创建，使得要更换对象时，不需要做大的改动就可以实现，降低了客户程序与产品对象的耦合。工厂模式是简单工厂模式的进一步抽象和推广。由于使用了多态性，工厂模式保持了简单工厂的有点，而且克服了它的缺点。但缺点是由于每加一个产品需要加一个产品工厂的类，增加了额外的开发量


	工厂模式+反射机制